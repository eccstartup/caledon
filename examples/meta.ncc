#include "../prelude/combinators.ncc"
#include "../prelude/naturals.ncc"
#include "../prelude/logic.ncc"
#include "../prelude/booleans.ncc"
#include "../prelude/io.ncc"

defn chooseProp : bool -> prop -> prop
   | chooseTrue = chooseProp true natural
   | chooseFalse = chooseProp false bool

defn getWorld : (bool -> prop) -> prop
   | getWorldImp = [F : bool -> prop][S : string][B : bool] 
                     getWorld F 
                   <- putStrLn "false/true"
   		   <- readLineIn S
                   <- string_bool B S
                   <- F B

defn getProp : prop -> prop
  as \P : prop . getWorld (\B2 : bool . chooseProp B2 P)

defn metaThing    : {Gp : getProp Pp} Pp -> prop
   | metaThingImp = metaThing zero

