#include "../prelude/rationals.ncc"

defn rat : prop as rational

fixity none 1 +
fixity none 2 *
fixity none 4 ^

defn formula : prop
   | val  = rat -> formula
   | +    = formula  -> formula -> formula
   | *    = formula  -> formula -> formula
   | ^    = formula  -> formula -> formula
   | comp = (rat -> formula) -> formula -> formula
   | ln  = formulat -> formula

defn eq : formula -> formula -> prop

-- defines a relationship between a function and its derivative
defn deriv : (rat -> formula) -> (rat -> formula) -> prop
   | deriv-eq  = deriv A B 
               <- ([x] eq (A x) (A' x))
               <- ([x] eq (B' x) (B' x))
               <- deriv A' B'
   | deriv-pow = deriv (\ x . var x ^ val R) (\ x . val R * var x ^ val Rm)
              <- r-sub R r-one Rm
   | deriv-const = deriv (\ x . R) (\ x . val r-zero)
   | deriv-sum  = deriv (\ x . A x + B x) (\ x . A' x + B' x)
               <- deriv A A'
               <- deriv B B'
   | deriv-prod = deriv (\ x : rational . U x * V x) (\ x : rational . U' x * V x + U x * V' x)
               <- deriv U U'
               <- deriv V V'
   | deriv-chain = deriv (\x . comp F (G x)) (\x . comp F' (G x) * G' x)
                <- deriv F F'
                <- deriv G G'
   | deriv-log  = deriv (\x . ln (var x) ) (\x . var x ^ var r-neg-one)
   | deriv-exp  = deriv (\x . A ^ var x )  (\x  . ln A * A ^ var x)